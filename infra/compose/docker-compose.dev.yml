services:
  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../../infra/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../../
      dockerfile: infra/docker/api.Dockerfile
    env_file:
      - ../../.env
    environment:
      DATABASE_URL: postgres://app:app@db:5432/app
      FRONTEND_ORIGIN: http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ../../apps/api:/app
    command: ["poetry", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  web:
    build:
      context: ../../
      dockerfile: infra/docker/web.Dockerfile
    env_file:
      - ../../.env
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    depends_on:
      - api
    ports:
      - "3000:3000"
    volumes:
      - ../../apps/web:/app
      - /app/node_modules
      - /app/.next

volumes:
  db_data: 